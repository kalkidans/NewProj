<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="munit-suite.xml" />
	<munit:test name="munitFlow-test" doc:id="b9ee3bb5-11ce-4b4c-a1ec-68c91547e6b9" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Request" doc:id="cf9d5260-9e40-43ba-a053-21fd26dc5271" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d720e635-26cc-4875-81d5-481f12fd8cab" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://munitFlowtest\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://munitFlowtest\mock_attributes.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="448e7717-5ed2-4e3c-87bf-f24001ff9ff6" >
				<munit:payload value="#[readUrl('classpath://munitFlowtest\set-event_payload1.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://munitFlowtest\set-event_attributes1.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to munitFlow" doc:id="3cfa70b4-eb1a-430e-9704-38116c4ca8e5" name="munitFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="9c1d0d23-5631-478b-be8b-6993c4019be4" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import munitFlowtest::assert_expression_payload1
---
assert_expression_payload1::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
